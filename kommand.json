{
    "components": {
        "bucket": {
            "type": "ext",
            "displayname": "CK S3 Bucket",
            "description": "Deploys an AWS S3 Bucket. S3 Buckets provide scalable flat file storage",
            "cloud": "AWS",
            "resources": ["AWS::s3::bucket"],
            "policy": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Sid": "Vis",
                    "Effect": "Allow",
                    "Action": [
                        "s3:CreateBucket",
                        "s3:DeleteBucket",
                        "s3:DeleteBucketNotificationConfiguration",
                        "s3:DeleteBucketPolicy",
                        "s3:DeleteBucketWebsite",
                        "s3:DeleteObject",
                        "s3:DeleteObjectTagging",
                        "s3:DeleteObjectVersion",
                        "s3:DeleteObjectVersionTagging",
                        "s3:GetBucketAcl",
                        "s3:GetBucketCORS",
                        "s3:GetBucketLocation",
                        "s3:GetBucketOwnershipControls",
                        "s3:GetBucketPolicy",
                        "s3:GetBucketPolicyStatus",
                        "s3:GetBucketPublicAccessBlock",
                        "s3:GetBucketTagging",
                        "s3:GetBucketVersioning",
                        "s3:GetBucketWebsite",
                        "s3:GetIntelligentTieringConfiguration",
                        "s3:GetObject",
                        "s3:GetReplicationConfiguration",
                        "s3:ListBucket",
                        "s3:ListBucketVersions",
                        "s3:PutBucketAcl",
                        "s3:PutBucketCORS",
                        "s3:PutBucketNotificationConfiguration",
                        "s3:PutBucketPolicy",
                        "s3:PutBucketPublicAccessBlock",
                        "s3:PutBucketTagging",
                        "s3:PutBucketVersioning",
                        "s3:PutBucketWebsite",
                        "s3:PutEncryptionConfiguration",
                        "s3:PutIntelligentTieringConfiguration",
                        "s3:PutLifecycleConfiguration",
                        "s3:PutReplicationConfiguration"
                    ],
                    "Resource": "*"
                }]
            },
            "input": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the bucket. If not present auto-generation will be attempted."
                    },
                    "versioning": {
                        "type": "boolean",
                        "description": "Whether to enable versioning on the bucket",
                        "default": false
                    },
                    "block_public_access": {
                        "type": "boolean",
                        "description": "If true, puts the full public access block"
                    },
                    "public_access_block": {
                        "type": "object",
                        "properties": {
                            "BlockPublicAcls": {"type": "boolean"},
                            "IgnorePublicAcls": {"type": "boolean"},
                            "BlockPublicPolicy": {"type": "boolean"},
                            "RestrictPublicBuckets": {"type": "boolean"}
                        },
                        "description": "Set this to configure the public access block on an item-by-item level"
                    },
                    "bucket_policy": {
                        "type": "object",
                        "description": "An inline IAM policy to attach to the S3 bucket. Your bucket should be in the Resource section of the policy"
                    },
                    "CORS": {
                        "type": ["boolean", "object"],
                        "description": "If set to true, attaches permissive CORS to the bucket. If set to an object, should have a single key 'CORSRules' with the value being a list of CORS rules"
                    },
                    "tags": {
                        "type": "object",
                        "description": "The tags to attach to this bucket"
                    },
                    "website_configuration": {
                        "type": "object",
                        "properties": {
                            "index_document": {
                                "type": "string",
                                "description": "The path to the index document for your static website"
                            },
                            "error_document": {
                                "type": "string",
                                "description": "The path that handles 4XX class errors. Can be the same as the index_document"
                            },
                            "redirect_to": {
                                "type": "string",
                                "description": "If you want to redirect all requests, this is where S3 will redirect requests to. Otherwise do not provide"
                            },
                            "redirect_protocol": {
                                "type": "string",
                                "enum": ["http", "https"],
                                "description": "If you want to redirect all requests, this is the protocol it redirects with"
                            },
                            "routing_rules": {
                                "type": "object",
                                "description": "See https://docs.aws.amazon.com/AmazonS3/latest/userguide/how-to-page-redirect.html#advanced-conditional-redirects to see how to write advanced redirect rules"
                            }
                        }
                    },
                    "notification_configuration": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "arn": {
                                    "type": "string",
                                    "description": "The ARN of the SNS topic, Lambda function, or SQS queue to send notifications to"
                                },
                                "events": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": ["s3:ObjectCreated:*", "s3:ObjectCreated:Put", "s3:ObjectCreated:Post", "s3:ObjectCreated:Copy", "s3:ObjectCreated:CompleteMultipartUpload", "s3:ObjectRemoved:*", "s3:ObjectRemoved:Delete", "s3:ObjectRemoved:DeleteMarkerCreated", "s3:ObjectRestore:Post", "s3:ObjectRestore:Completed", "s3:ReducedRedundancyLostObject"]
                                    },
                                    "description": "The events that will trigger the notification"
                                },
                                "filter_prefixes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "The object prefixes that will trigger the notification"
                                },
                                "filter_suffixes": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "The object suffixes that will trigger the notification"
                                }
                            },
                            "required": ["arn", "events"]
                        }
                    }
                }
            },
            "props": {
                "arn": {
                    "type": "string",
                    "description": "The ARN of the S3 bucket"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the S3 bucket"
                },
                "region": {
                    "type": "integer",
                    "description": "The region in which this S3 bucket was deployed"
                }
            }
        }
    }
}